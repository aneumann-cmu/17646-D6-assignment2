---
- name: Deploy and configure SonarQube
  hosts: localhost
  gather_facts: false
  vars:
    SONARQUBE_URL: "http://sonarqube:9000"
    SONARQUBE_ADMIN_USERNAME: "admin"
    SONARQUBE_ADMIN_PASSWORD: "password"

  tasks:
    - name: Wait for SonarQube to be up
      shell: "curl -sSf {{ SONARQUBE_URL }}/api/system/status"
      register: sonarqube_status
      retries: 20
      delay: 10
      until: sonarqube_status.rc == 0 and sonarqube_status.stdout | from_json | json_query('status') == 'UP'
      ignore_errors: yes

    - name: Display SonarQube status message
      debug:
        msg: "Waiting for SonarQube to be up, please standby ({{ 20 - sonarqube_status.retries }} retries left)"
      when: sonarqube_status is failed

    - name: Set SonarQube admin password using curl
      shell: >
        curl -s -vu "{{ SONARQUBE_ADMIN_USERNAME}}:admin" -o /dev/null -X POST "{{ SONARQUBE_URL }}/api/users/change_password?login={{ SONARQUBE_ADMIN_USERNAME }}&previousPassword=admin&password={{ SONARQUBE_ADMIN_PASSWORD }}"
      register: result_set_password
      failed_when: result_set_password.rc != 0

    - name: Create Petclinic project in Sonarqube using curl
      shell: |
        curl -s -u "{{ SONARQUBE_ADMIN_USERNAME }}:{{ SONARQUBE_ADMIN_PASSWORD }}" -o /dev/null -X POST "{{ SONARQUBE_URL }}/api/projects/create" \
          -d "project=petclinic" \
          -d "name=petclinic" \
          -d "projectVisibility=public"
      register: result