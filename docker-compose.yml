version: '3.3'

services:
  #Jenkins Container Variables
  jenkins:
    build:
      context: .
      dockerfile: jenkins_config/Dockerfile
    image: jenkins/jenkins:jdk17
    hostname: jenkins
    container_name: jenkins
    volumes:
      - ./jenkins_config/casc.yaml:/var/jenkins_home/casc.yaml
      - ./jenkins_config/plugins.txt:/usr/share/jenkins/ref/plugins.txt
      - ./sonar_config:/var/jenkins_home/sonar_config
      - ./jenkins_config:/var/jenkins_home/jenkins_config
      - ./ansible_config:/root/ansible_config
      - ./pc_deploy:/root/pc_deploy
    networks:
      - devnet
    ports:
      - '8080:8080'
      - '8084:8084'
      - '50000:50000'
    environment:
      #Set Jenkins Installation Options
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=true

      #Set Jenkins Environment Variables
      - CASC_JENKINS_CONFIG=/var/jenkins_home/casc.yaml

  #Sonarqube Container Variables
  sonarqube:
    image: sonarqube:9.9-community
    hostname: sonarqube
    container_name: sonarqube
    networks:
      - devnet
    ports:
      - '9000:9000'
    depends_on:
      - db
    environment:
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonarqube

  #Sonarqube Database Container Variables
  db:
    image: postgres
    container_name: sonardb
    networks:
      - devnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube

  pcapp:
    build:
      context: .
      dockerfile: pc_config/Dockerfile
    image: ubuntu:jammy
    hostname: pcapp
    container_name: pcapp
    volumes:
      - ./ansible_config:/root/ansible_config
      - ./pc_deploy:/root/pc_deploy
    networks:
      - devnet
    ports:
      - '8085:8085'
networks:
  devnet:
    driver: bridge
